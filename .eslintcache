[{"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/index.js":"1","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/App.js":"2","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/reportWebVitals.js":"3","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/store.js":"4","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducer.js":"5","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/category.js":"6","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/actionTypes.js":"7","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/HomePage/HomePage.js":"8","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/Header/Header.js":"9","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/categoryActions.js":"10","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/helpers/axios.js":"11","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/urlConfig.js":"12","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductListPage/ProductListPage.js":"13","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/Layout.js":"14","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/MenuHeader/MenuHeader.js":"15","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/productActions.js":"16","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/products.js":"17","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductListPage/ProductStore/ProductStore.js":"18","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/helpers/getQueryParams.js":"19","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductListPage/ProductPage/ProductPage.js":"20","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/Header/SignInModal/SignInModal.js":"21","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/auth.js":"22","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/authActions.js":"23","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductDetailsPage/ProductDetailsPage.js":"24","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/Cart/Cart.js":"25","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/cart.js":"26","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/cartActions.js":"27","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/Cart/components/CartItem/CartItem.js":"28","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/CheckoutPage.js":"29","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/user.js":"30","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/Timeline/Timeline.js":"31","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/CheckoutStep/CheckoutStep.js":"32","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/AddressForm/AddressForm.js":"33","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/UI/Input/Input.js":"34","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/userActions.js":"35","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/OrdersPage/OrdersPage.js":"36"},{"size":642,"mtime":1608642543647,"results":"37","hashOfConfig":"38"},{"size":1662,"mtime":1610027891919,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1608639380816,"results":"40","hashOfConfig":"38"},{"size":315,"mtime":1609250620417,"results":"41","hashOfConfig":"38"},{"size":478,"mtime":1609582518405,"results":"42","hashOfConfig":"38"},{"size":919,"mtime":1608647375127,"results":"43","hashOfConfig":"38"},{"size":2182,"mtime":1609948449829,"results":"44","hashOfConfig":"38"},{"size":228,"mtime":1608698368880,"results":"45","hashOfConfig":"38"},{"size":2254,"mtime":1609568154210,"results":"46","hashOfConfig":"38"},{"size":842,"mtime":1608647469747,"results":"47","hashOfConfig":"38"},{"size":724,"mtime":1609567775122,"results":"48","hashOfConfig":"38"},{"size":152,"mtime":1608641435237,"results":"49","hashOfConfig":"38"},{"size":879,"mtime":1609148344731,"results":"50","hashOfConfig":"38"},{"size":303,"mtime":1608698382812,"results":"51","hashOfConfig":"38"},{"size":1247,"mtime":1609151160834,"results":"52","hashOfConfig":"38"},{"size":2507,"mtime":1609333756630,"results":"53","hashOfConfig":"38"},{"size":2327,"mtime":1609333797546,"results":"54","hashOfConfig":"38"},{"size":3176,"mtime":1609249815552,"results":"55","hashOfConfig":"38"},{"size":420,"mtime":1609146570828,"results":"56","hashOfConfig":"38"},{"size":1852,"mtime":1609165824797,"results":"57","hashOfConfig":"38"},{"size":2585,"mtime":1609250062257,"results":"58","hashOfConfig":"38"},{"size":1531,"mtime":1609856155784,"results":"59","hashOfConfig":"38"},{"size":2359,"mtime":1609856371031,"results":"60","hashOfConfig":"38"},{"size":6620,"mtime":1609584493351,"results":"61","hashOfConfig":"38"},{"size":3848,"mtime":1609851827294,"results":"62","hashOfConfig":"38"},{"size":1496,"mtime":1609566097749,"results":"63","hashOfConfig":"38"},{"size":3408,"mtime":1609567541636,"results":"64","hashOfConfig":"38"},{"size":1455,"mtime":1609500117871,"results":"65","hashOfConfig":"38"},{"size":10140,"mtime":1610027603795,"results":"66","hashOfConfig":"38"},{"size":2472,"mtime":1610028703055,"results":"67","hashOfConfig":"38"},{"size":1974,"mtime":1609748894355,"results":"68","hashOfConfig":"38"},{"size":1844,"mtime":1609856025282,"results":"69","hashOfConfig":"38"},{"size":5852,"mtime":1609764326653,"results":"70","hashOfConfig":"38"},{"size":1901,"mtime":1609752467035,"results":"71","hashOfConfig":"38"},{"size":4931,"mtime":1610029754187,"results":"72","hashOfConfig":"38"},{"size":1353,"mtime":1610034187326,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1rz0dnl",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/index.js",[],["152","153"],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/App.js",["154","155"],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/reportWebVitals.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/store.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducer.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/category.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/actionTypes.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/HomePage/HomePage.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/Header/Header.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/categoryActions.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/helpers/axios.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/urlConfig.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductListPage/ProductListPage.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/Layout.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/MenuHeader/MenuHeader.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/productActions.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/products.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductListPage/ProductStore/ProductStore.js",["156"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { getProductsBySlug } from '../../../store/actions/productActions'\r\nimport classes from './ProductStore.module.css'\r\nimport { generatePublicURL } from '../../../urlConfig'\r\n\r\nconst ProductStore = () => {\r\n\r\n    const products = useSelector(state => state.products)\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsBySlug(slug))\r\n    }, [])\r\n\r\n    return (\r\n            <div className={classes.pageContent}>\r\n                {Object.keys(products.productsByPrice).map(priceRange => {\r\n                    if (products.productsByPrice[priceRange].length === 0) {\r\n                        return null\r\n                    }\r\n                    return (\r\n                        <div className={classes.card}>\r\n                            <div className={classes.cardHeader}>\r\n                                <div>Samsung Mobile Under S${/\\d+$/.exec(priceRange)[0]}</div>\r\n                                <button className={classes.viewAll}>View All</button>\r\n                            </div>\r\n                            <div className={classes.productsContainer}>\r\n                                {products.productsByPrice[priceRange].map(item => {\r\n                                    return (\r\n                                        <Link \r\n                                        to={`/${item.slug}/${item._id}/p`}\r\n                                        style={{display: \"block\"}}\r\n                                        className={classes.product}>\r\n                                            <div className={classes.imgContainer}>\r\n                                                {item.productPictures.length > 0 ? <img \r\n                                                src={generatePublicURL(item.productPictures[0].img)}\r\n                                                alt=\"samsung\" />: <div>No picture was added</div>}\r\n                                            </div>\r\n                                            <div className={classes.detailsContainer}>\r\n                                                <div className={classes.productPrice}>S${item.price}</div>\r\n                                                <div>{item.name}</div>\r\n                                                <div>\r\n                                                    <button className={classes.ratings}>\r\n                                                        <span>4.3</span>\r\n                                                    </button>\r\n                                                    <span className={classes.noofreviews}>3502</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProductStore","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/helpers/getQueryParams.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductListPage/ProductPage/ProductPage.js",["157"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getProductPage } from '../../../store/actions/productActions'\r\nimport getQueryParams from '../../../helpers/getQueryParams'\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport classes from './ProductPage.module.css'\r\n\r\nconst ProductPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    const products = useSelector(state => state.products)\r\n\r\n    useEffect(() => {\r\n        const params = getQueryParams(props.location.search)\r\n        dispatch(getProductPage(params))\r\n    }, [])\r\n\r\n    const { page } = products\r\n\r\n    return (\r\n        <div className={classes.pageContent}>\r\n            <h3 className={classes.pageTitle}>{page.title} Store</h3>\r\n            <Carousel renderThumbs={() => { }}>\r\n                {page.bannerImages ? page.bannerImages.map((banner, index) => {\r\n                    return (\r\n                        <a style={{display: \"block\"}} href={banner.navigateTo}>\r\n                            <div key={index} className={classes.imgContainer} >\r\n                                <img src={banner.img} alt=\"\" />\r\n                            </div>\r\n                        </a>\r\n                    )\r\n                }) : null}\r\n            </Carousel>\r\n            <div className={classes.productsDiv}>\r\n                {page.productImages ? page.productImages.map((product, index) => {\r\n                    return (\r\n                        <div className={classes.productContainer} key={index}>\r\n                            <img src={product.img} alt=\"\"/>\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/Layout/Header/SignInModal/SignInModal.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/auth.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/authActions.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/ProductDetailsPage/ProductDetailsPage.js",["158","159","160","161","162"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Layout from '../../components/Layout/Layout'\r\nimport { getProductDetailsById } from '../../store/actions/productActions'\r\nimport { addToCart } from '../../store/actions/cartActions'\r\nimport classes from './ProductDetailsPage.module.css'\r\nimport { generatePublicURL } from '../../urlConfig'\r\nimport { FaFacebookMessenger, FaFacebook, FaGooglePlus, FaPinterest, FaRegHeart } from 'react-icons/fa'\r\n\r\nconst ProductDetailsPage = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { productId } = props.match.params\r\n    const products = useSelector(state => state.products)\r\n    const [selectedImage, setSelectedImage] = useState('')\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetailsById(productId))\r\n    }, [])\r\n\r\n    if (Object.keys(products.productDetails).length === 0) {\r\n        return null\r\n    }\r\n\r\n    const firstImage = products.productDetails.productPictures.length > 0 ?\r\n        generatePublicURL(products.productDetails.productPictures[0].img)\r\n        : null\r\n\r\n    const onAddToCart = () => {\r\n        const { _id, name, price } = products.productDetails\r\n        const img = products.productDetails.productPictures\r\n        const qty = quantity === \"\" ? 0 : quantity\r\n        dispatch(addToCart({ _id, name, price, img }, qty))\r\n        props.history.push('/cart')\r\n    }\r\n\r\n    const qty = quantity === \"\" ? 0 : quantity\r\n    console.log(qty)\r\n\r\n    return (\r\n        <Layout>\r\n            <div className={classes.pageContent}>\r\n                <div className={classes.productContainer}>\r\n                    <div className={classes.imagesContainer}>\r\n                        <div className={classes.selectedImage}>\r\n                            <img src={selectedImage === '' ?\r\n                                firstImage\r\n                                : selectedImage\r\n                            } alt=\"\" />\r\n                        </div>\r\n                        <div className={classes.thumbnailGallery}>\r\n                            {products.productDetails.productPictures.map(picture => {\r\n                                return (\r\n                                    <div className={classes.thumbnail}>\r\n                                        <img\r\n                                            src={generatePublicURL(picture.img)}\r\n                                            onMouseOver={() => setSelectedImage(generatePublicURL(picture.img))} alt=\"\" />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div className={classes.shareContainer}>\r\n                            <div className={classes.shareBtns}>Share\r\n                                <a><FaFacebookMessenger style={{ color: \"#006AFF\" }} /></a>\r\n                                <a> <FaFacebook style={{ color: \"#4267B2\" }} /></a>\r\n                                <a><FaGooglePlus style={{ color: \"#DB4437\" }} /></a>\r\n                                <a><FaPinterest style={{ color: \"#E60023\" }} /></a>\r\n                            </div>\r\n                            <div className={classes.favourites}>\r\n                                <FaRegHeart style={{ color: \"salmon\" }} />\r\n                                Favourites (105)\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.rightContainers}>\r\n                        <div className={classes.detailsContainer}>\r\n                            <div style={{ fontSize: \"20px\" }}>{products.productDetails.name}</div>\r\n                            <div style={{ fontSize: \"30px\", fontWeight: \"600\", color: \"salmon\" }}>${products.productDetails.price}</div>\r\n                            <div>\r\n                                <p style={{ color: \"#888\" }}>Description </p>\r\n                                <p>{products.productDetails.description}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.cartContainer}>\r\n                            <div className={classes.quantity}>\r\n                                <div><p>Quantity</p></div>\r\n                                <div className={classes.quantityBtns}>\r\n                                    <button\r\n                                    onClick={() => {\r\n                                        if (quantity === '' || quantity === 0) {\r\n                                            return\r\n                                        }\r\n                                        console.log(quantity)\r\n                                        if (quantity > 0) {\r\n                                            const qty = quantity\r\n                                            setQuantity(qty - 1)\r\n                                        }\r\n                                    }}>-</button>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={quantity.toString()}\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === '') {\r\n                                                setQuantity(e.target.value)\r\n                                            }\r\n                                            if (parseInt(e.target.value) >= 0) {\r\n                                                setQuantity(parseInt(e.target.value))\r\n                                            }\r\n                                        }} />\r\n                                    <button\r\n                                    onClick={() => {\r\n                                        const qty = quantity + 1\r\n                                        setQuantity(qty)\r\n                                    }}>+</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.addToCartContainer}>\r\n                                <button className={classes.addToCart} onClick={onAddToCart}>\r\n                                    Add To Cart\r\n                                </button>\r\n                                <button className={classes.buyNow}>Buy Now</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ProductDetailsPage","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/Cart/Cart.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/cart.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/cartActions.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/Cart/components/CartItem/CartItem.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/CheckoutPage.js",["163"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Layout from '../../components/Layout/Layout'\r\nimport CheckoutStep from './CheckoutStep/CheckoutStep'\r\nimport classes from './CheckoutPage.module.css'\r\nimport AddressForm from './AddressForm/AddressForm'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport { login, logout } from '../../store/actions/authActions'\r\nimport { getAddress, addOrder } from '../../store/actions/userActions'\r\n\r\nconst CheckoutPage = (props) => {\r\n\r\n    const auth = useSelector(state => state.auth)\r\n    const user = useSelector(state => state.user)\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [selectedAddress, setSelectedAddress] = useState('')\r\n    const [paymentOption, setPaymentOption] = useState('')\r\n    const [currentStep, setCurrentStep] = useState(1)\r\n    const [showAddressForm, setShowAddressForm] = useState(false)\r\n    const [showEditAddressForm, setShowEditAddressForm] = useState(false)\r\n    const [editingAddress, setEditingAddress] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (auth.authenticated) {\r\n            dispatch(getAddress())\r\n            setCurrentStep(2)\r\n        }\r\n        if (!auth.authenticated) {\r\n            setCurrentStep(1)\r\n        }\r\n    }, [auth.authenticated])\r\n    //1) create timeline. Flexible should be able to define number of total steps and current step\r\n    //2) create checkoutstep components. Should be flexible and be displayed depending on the current step\r\n    //3) stepnumber is stored in useState. \r\n    //4) Next and previous button to change step number but cannot go below 1 and above 4.\r\n    //5) Design form components using .card e.g. login (if auth.authenticated false) / radio button for selecting addresses and address form\r\n    //6) 3 and 4 not done \r\n    //6) Address form should be a container that manages its own state. Used for get and add addresses\r\n\r\n    const onSignIn = () => {\r\n        const user = {\r\n            email, password\r\n        }\r\n        dispatch(login(user))\r\n    }\r\n\r\n    const totalQuantity = Object.keys(cart.cartItems).reduce((total, currentKey) => {\r\n        return (\r\n            total + cart.cartItems[currentKey].qty\r\n        )\r\n    }, 0)\r\n\r\n    const totalPrice = Object.keys(cart.cartItems).reduce((total, currentKey) => {\r\n        return total + cart.cartItems[currentKey].qty * cart.cartItems[currentKey].price\r\n    }, 0)\r\n\r\n    const onConfirmOrder = () => {\r\n        if (paymentOption === '') {\r\n            return alert('Please select a payment option')\r\n        }\r\n        const payload = {\r\n            totalAmount: totalPrice,\r\n            address: selectedAddress,\r\n            paymentStatus: \"pending\",\r\n            items: Object.keys(cart.cartItems).map(key => {\r\n                return {\r\n                    productId: cart.cartItems[key]._id,\r\n                    quantity: cart.cartItems[key].qty,\r\n                    purchasedPrice: cart.cartItems[key].price\r\n                }\r\n            })\r\n        }\r\n        dispatch(addOrder(payload))\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div>\r\n                <CheckoutStep\r\n                    label=\"Sign In\"\r\n                    stepNumber={1}\r\n                    totalSteps={4}\r\n                    currentStep={currentStep}\r\n                    timelineLabels={['Sign In', 'Address', 'Order Summary', 'Payment Option']}\r\n                    onSubmit={onSignIn}>\r\n                    <div className={classes.signinForm}>\r\n                        <Input\r\n                            label=\"Email\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)} />\r\n                        <Input\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} />\r\n                    </div>\r\n                </CheckoutStep>\r\n                <CheckoutStep\r\n                    label=\"Select your address\"\r\n                    stepNumber={2}\r\n                    totalSteps={4}\r\n                    currentStep={currentStep}\r\n                    timelineLabels={['Sign In', 'Address', 'Order Summary', 'Payment Option']}\r\n                    onArrowBack={() => dispatch(logout())}\r\n                    onSubmit={() => {\r\n                        if (selectedAddress === '') {\r\n                            return alert(\"Select an address\")\r\n                        }\r\n                        setCurrentStep(3)\r\n                    }}>\r\n                    <div style={{ padding: \"40px 0px 40px 0px\" }} className={classes.selectAddressGroup}>\r\n                        {user.address ? user.address.map((item, index) => {\r\n                            return (\r\n                                <div key={index} onChange={(e) => { setSelectedAddress(e.target.value) }}>\r\n                                    <div className={classes.radio}>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"address\"\r\n                                            value={item._id} />\r\n                                        <div className={classes.addressDesc}>{item.address}</div>\r\n                                    </div>\r\n                                    <div className={classes.edit} onClick={() => {\r\n                                        setEditingAddress(item)\r\n                                        setShowEditAddressForm(true)\r\n                                    }}>Edit</div>\r\n                                </div>\r\n                            )\r\n                        }) : null}\r\n                        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                            <div className={classes.addNewAddressBtn} onClick={() => setShowAddressForm(true)}\r\n                            >Add new address</div>\r\n                        </div>\r\n                    </div>\r\n                </CheckoutStep>\r\n                <CheckoutStep\r\n                    label=\"Order Summary\"\r\n                    stepNumber={3}\r\n                    totalSteps={4}\r\n                    currentStep={currentStep}\r\n                    timelineLabels={['Sign In', 'Address', 'Order Summary', 'Payment Option']}\r\n                    onArrowBack={() => {\r\n                        setCurrentStep(2)\r\n                    }}\r\n                    confirmationText={<span>A confirmation email will be sent to <b>{auth.user.email}</b></span>}\r\n                    onSubmit={() => {\r\n                        if (Object.keys(cart.cartItems).length === 0) {\r\n                            return alert(\"No items in cart.\")\r\n                        }\r\n                        //use send grid \r\n                        setCurrentStep(4)\r\n                    }}\r\n                >\r\n                    <div style={{ padding: \"40px 0px 60px 0px\" }}>\r\n                        {Object.keys(cart.cartItems).map((key, index) => {\r\n                            return (\r\n                                <div key={index} className={classes.summaryRow}>\r\n                                    <span className={classes.rowLeft}>{cart.cartItems[key].name}</span>\r\n                                    <div className={classes.rowRight}>\r\n                                        <div className={classes.qty}>Qty: {cart.cartItems[key].qty}</div>\r\n                                        <div className={classes.itemPrice}>${cart.cartItems[key].qty * cart.cartItems[key].price}</div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <div className={classes.summaryRow}>\r\n                            <span className={classes.rowLeft}>Total</span>\r\n                            <div className={classes.rowRight}>\r\n                                <div className={classes.qty}>Qty: {totalQuantity}</div>\r\n                                <div className={classes.itemPrice}>${totalPrice}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CheckoutStep>\r\n                <CheckoutStep\r\n                    label=\"Payment options\"\r\n                    stepNumber={4}\r\n                    totalSteps={4}\r\n                    currentStep={currentStep}\r\n                    timelineLabels={['Sign In', 'Address', 'Order Summary', 'Payment Option']}\r\n                    onArrowBack={() => {\r\n                        setCurrentStep(3)\r\n                    }}\r\n                    onSubmit={() => {\r\n\r\n                        //implement stripe payment gateway\r\n                        onConfirmOrder()\r\n                        props.history.push('/orders')\r\n                    }}>\r\n                    <div\r\n                        className={classes.optionsContainer}\r\n                        onChange={(e) => setPaymentOption(e.target.value)}>\r\n                        <input type=\"radio\" value=\"cash\" name=\"payment\" />\r\n                        <span>Cash on delivery</span>\r\n                    </div>\r\n\r\n                </CheckoutStep>\r\n                <AddressForm\r\n                    show={showAddressForm}\r\n                    setShow={setShowAddressForm}\r\n                    label=\"Add new address\"\r\n                    btnLabel=\"Add\" />\r\n                <AddressForm\r\n                    show={showEditAddressForm}\r\n                    setShow={setShowEditAddressForm}\r\n                    editingAddress={editingAddress}\r\n                    type=\"edit\"\r\n                    label=\"Edit address\"\r\n                    btnLabel=\"Save changes\" />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CheckoutPage","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/reducers/reducers/user.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/Timeline/Timeline.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/CheckoutStep/CheckoutStep.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/CheckoutPage/AddressForm/AddressForm.js",["164"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { BiArrowBack } from 'react-icons/bi'\r\nimport classes from './AddressForm.module.css'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport { addAddress, editAddress } from '../../../store/actions/userActions'\r\n\r\nconst AddressForm = (props) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [mobileNumber, setMobileNumber] = useState('')\r\n    const [postalCode, setPostalCode] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [cityDistrict, setCityDistrict] = useState('')\r\n    const [state, setState] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const label = props.label\r\n    const btnLabel = props.btnLabel\r\n    const {\r\n        show,\r\n        setShow\r\n    } = props\r\n\r\n    const toShow = { display: 'none' }\r\n    if (show) {\r\n        toShow.display = 'block'\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            if (props.type === \"edit\") {\r\n                setName(props.editingAddress.name)\r\n                setMobileNumber(props.editingAddress.mobileNumber)\r\n                setPostalCode(props.editingAddress.postalCode)\r\n                setAddress(props.editingAddress.address)\r\n                setCityDistrict(props.editingAddress.cityDistrict)\r\n                setState(props.editingAddress.state)\r\n                setCountry(props.editingAddress.country)\r\n            }\r\n        }\r\n    }, [show])\r\n\r\n    const onAddAddress = () => {\r\n        const addressObj = {\r\n            name, \r\n            mobileNumber,\r\n            postalCode,\r\n            address,\r\n            cityDistrict,\r\n            state,\r\n            country\r\n        }\r\n        dispatch(addAddress(addressObj))\r\n        setShow(false)\r\n    }\r\n\r\n    const onEditAddress = () => {\r\n        const addressObj = {\r\n            _id: props.editingAddress._id,\r\n            name, \r\n            mobileNumber,\r\n            postalCode,\r\n            address,\r\n            cityDistrict,\r\n            state,\r\n            country\r\n        }\r\n        dispatch(editAddress(addressObj))\r\n        setShow(false)\r\n    }\r\n\r\n    const onSubmit = props.type === \"edit\" ? onEditAddress : onAddAddress\r\n\r\n    return (\r\n        <div className={classes.backdrop} style={toShow}>\r\n            <div className={'card ' + classes.container}>\r\n                <div className={classes.arrowBack} onClick={() => {\r\n                    setShow(false)\r\n                }}><BiArrowBack /></div>\r\n                <div className={classes.labelContainer}><label>{label}</label></div>\r\n                <div className={classes.formContainer}>\r\n                    <div className={classes.formRow}>\r\n                        <Input\r\n                            label=\"Name\"\r\n                            placeholder=\"Enter name\"\r\n                            type=\"text-flexible-width\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            label=\"Mobile number\"\r\n                            placeholder=\"Enter mobile number\"\r\n                            type=\"text-flexible-width\"\r\n                            value={mobileNumber}\r\n                            onChange={(e) => setMobileNumber(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formRow}>\r\n                        <Input\r\n                            label=\"Postal code\"\r\n                            placeholder=\"Enter postal code\"\r\n                            type=\"text-flexible-width\"\r\n                            value={postalCode}\r\n                            onChange={(e) => setPostalCode(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            label=\"City/District\"\r\n                            placeholder=\"Enter city or district\"\r\n                            type=\"text-flexible-width\"\r\n                            value={cityDistrict}\r\n                            onChange={(e) => setCityDistrict(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formRow}>\r\n                        <Input\r\n                            label=\"State\"\r\n                            placeholder=\"Enter state\"\r\n                            type=\"text-flexible-width\"\r\n                            value={state}\r\n                            onChange={(e) => setState(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            label=\"Country\"\r\n                            placeholder=\"Enter country\"\r\n                            type=\"text-flexible-width\"\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Input\r\n                            label=\"Address\"\r\n                            placeholder=\"Enter your address\"\r\n                            type=\"text-flexible-width\"\r\n                            width=\"100%\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{\r\n                    padding: \"0 20px\",\r\n                    textAlign: \"right\"\r\n                }}>\r\n                    <button \r\n                    className={'button-orange'}\r\n                    onClick={onSubmit}>{btnLabel}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n\r\n","/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/components/UI/Input/Input.js",[],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/store/actions/userActions.js",["165"],"/mnt/c/Users/Nicholas Yap/Desktop/Projects/E-commerce Project/e-commerce-front-end/src/containers/OrdersPage/OrdersPage.js",["166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":24,"column":6,"nodeType":"173","endLine":24,"endColumn":8,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"175","line":28,"column":6,"nodeType":"173","endLine":28,"endColumn":26,"suggestions":"176"},{"ruleId":"171","severity":1,"message":"177","line":16,"column":8,"nodeType":"173","endLine":16,"endColumn":10,"suggestions":"178"},{"ruleId":"171","severity":1,"message":"179","line":16,"column":8,"nodeType":"173","endLine":16,"endColumn":10,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"181","line":19,"column":8,"nodeType":"173","endLine":19,"endColumn":10,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":64,"column":33,"nodeType":"185","endLine":64,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":65,"column":33,"nodeType":"185","endLine":65,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":66,"column":33,"nodeType":"185","endLine":66,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":67,"column":33,"nodeType":"185","endLine":67,"endColumn":36},{"ruleId":"171","severity":1,"message":"175","line":34,"column":8,"nodeType":"173","endLine":34,"endColumn":28,"suggestions":"186"},{"ruleId":"171","severity":1,"message":"187","line":43,"column":8,"nodeType":"173","endLine":43,"endColumn":14,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":3,"column":10,"nodeType":"191","messageId":"192","endLine":3,"endColumn":17},{"ruleId":"171","severity":1,"message":"175","line":14,"column":8,"nodeType":"173","endLine":14,"endColumn":10,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticated' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["197"],"React Hook useEffect has missing dependencies: 'dispatch' and 'slug'. Either include them or remove the dependency array.",["198"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has missing dependencies: 'dispatch' and 'productId'. Either include them or remove the dependency array.",["200"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["201"],"React Hook useEffect has missing dependencies: 'props.editingAddress.address', 'props.editingAddress.cityDistrict', 'props.editingAddress.country', 'props.editingAddress.mobileNumber', 'props.editingAddress.name', 'props.editingAddress.postalCode', 'props.editingAddress.state', and 'props.type'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.editingAddress.name', you can also switch to useReducer instead of useState and read 'props.editingAddress.name' in the reducer.",["202"],"no-unused-vars","'BiError' is defined but never used.","Identifier","unusedVar",["203"],"no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"204","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [auth.authenticated, dispatch]",{"range":"218","text":"219"},{"range":"220","text":"219"},"Update the dependencies array to be: [dispatch, slug]",{"range":"221","text":"222"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"223","text":"224"},"Update the dependencies array to be: [dispatch, productId]",{"range":"225","text":"226"},{"range":"227","text":"219"},"Update the dependencies array to be: [props.editingAddress.address, props.editingAddress.cityDistrict, props.editingAddress.country, props.editingAddress.mobileNumber, props.editingAddress.name, props.editingAddress.postalCode, props.editingAddress.state, props.type, show]",{"range":"228","text":"229"},"Update the dependencies array to be: [dispatch]",{"range":"230","text":"231"},[974,976],"[auth.authenticated, dispatch]",[1031,1051],[568,570],"[dispatch, slug]",[688,690],"[dispatch, props.location.search]",[888,890],"[dispatch, productId]",[1437,1457],[1522,1528],"[props.editingAddress.address, props.editingAddress.cityDistrict, props.editingAddress.country, props.editingAddress.mobileNumber, props.editingAddress.name, props.editingAddress.postalCode, props.editingAddress.state, props.type, show]",[489,491],"[dispatch]"]